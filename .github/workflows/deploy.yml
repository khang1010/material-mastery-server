name: Deploy

on:
  push:
    branches: ['master', 'config_docker']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Add key.pem
        run: echo "${{ secrets.SSH_KEY }}" > "key.pem"
      - name: Change mode
        run: chmod 400 "key.pem"
      - name: SSH
        env:
          PORT: ${{secrets.PORT}}
          NODE_ENV: ${{secrets.NODE_ENV}}
          DEV_APP_PORT: ${{secrets.DEV_APP_PORT}}
          DEV_DB_HOST: ${{secrets.DEV_DB_HOST}}
          DEV_DB_NAME: ${{secrets.DEV_DB_NAME}}
          DEV_DB_PASSWORD: ${{secrets.DEV_DB_PASSWORD}}
          DEV_DB_PORT: ${{secrets.DEV_DB_PORT}}
          PRO_APP_PORT: ${{secrets.PRO_APP_PORT}}
          PRO_DB_HOST: ${{secrets.PRO_DB_HOST}}
          PRO_DB_NAME: ${{secrets.PRO_DB_NAME}}
          PRO_DB_PORT: ${{secrets.PRO_DB_PORT}}
          REDIS_HOST: ${{secrets.REDIS_HOST}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}
          REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
          DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
          DISCORD_CHANNEL: ${{secrets.DISCORD_CHANNEL}}
        run: |
          ssh -tt -i "key.pem" -o StrictHostKeyChecking=no ec2-user@ec2-3-26-179-89.ap-southeast-2.compute.amazonaws.com "
          rm -rf material-mastery-server &&
          git clone https://github.com/khang1010/material-mastery-server.git &&
          cd material-mastery-server && 
          echo $'DISCORD_TOKEN=${{secrets.DISCORD_TOKEN}}\nDISCORD_CHANNEL=${{secrets.DISCORD_CHANNEL}}\nPORT=${{secrets.PORT}}\nNODE_ENV=${{secrets.NODE_ENV}}\nDEV_APP_PORT=${{secrets.DEV_APP_PORT}}\nDEV_DB_HOST=${{secrets.DEV_DB_HOST}}\nDEV_DB_NAME=${{secrets.DEV_DB_NAME}}\nDEV_DB_PASSWORD=${{secrets.DEV_DB_PASSWORD}}\nDEV_DB_PORT=${{secrets.DEV_DB_PORT}}\nREDIS_HOST=${{secrets.REDIS_HOST}}\nREDIS_PORT=${{secrets.REDIS_PORT}}\nREDIS_PASSWORD=${{secrets.REDIS_PASSWORD}}' > .env &&
          sudo docker rm -f server &&
          sudo docker-compose down &&
          sudo docker-compose up --build -d &&
          sudo docker image prune -f &&
          exit
          "
